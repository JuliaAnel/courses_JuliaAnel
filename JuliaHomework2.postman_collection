{
	"info": {
		"_postman_id": "abc11c16-d132-4838-ae9f-be878e7475ec",
		"name": "Homework2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							"pm.expect(response.name).to.eql(\"Julia\");\r",
							"})\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"pm.expect(response.age).to.eql(\"27\");\r",
							"})\r",
							"\r",
							"pm.test(\"check salary\", function () {\r",
							"pm.expect(response.salary).to.eql(500);\r",
							"})\r",
							"\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"pm.expect(response.name).to.eql(req.name);\r",
							"})\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"pm.expect(response.age).to.eql(req.age);\r",
							"})\r",
							"\r",
							"pm.test(\"salary\", function () {\r",
							"pm.expect(response.salary).to.eql(+req.salary);\r",
							"})\r",
							"\r",
							"console.log(response.family);\r",
							"\r",
							"pm.test(\"salary*4\", function () {\r",
							"pm.expect(response.family.u_salary_1_5_year).to.eql(req.salary*4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Julia",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							"pm.expect(response.name).to.eql(req.name);\r",
							"})\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"    pm.expect(response.age).to.eql(req.age);\r",
							"})\r",
							"\r",
							"pm.test(\"check salary\", function () {\r",
							"pm.expect(response.salary).to.eql(+req.salary);\r",
							"})\r",
							"\r",
							"console.log(response.family);\r",
							"\r",
							"pm.test(\"dog has name\", function () {\r",
							"    pm.expect(response.family.pets.dog).to.have.property(\"name\");\r",
							"})\r",
							"\r",
							"pm.test(\"dog has name\", function () {\r",
							"    pm.expect(response.family.pets.dog).to.have.property(\"age\");\r",
							"})\r",
							"\r",
							"pm.test(\"name is Luky\", function () {\r",
							"pm.expect(response.family.pets.dog.name).to.have.eql(\"Luky\");\r",
							"})\r",
							"\r",
							"pm.test(\"age is 4\", function () {\r",
							"pm.expect(response.family.pets.dog.age).to.have.eql(4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_3?name=Julia&age=27&salary=500",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Julia"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"let req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"check name\", function () {\r",
							" pm.expect(response.name).to.eql(req.name);   \r",
							"})\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"pm.expect(response.age).to.eql(+req.age);\r",
							"})\r",
							"\r",
							"console.log(req.salary);\r",
							"console.log(response.salary);\r",
							"console.log(response.salary[0]);\r",
							"console.log(response.salary[1]);\r",
							"console.log(response.salary[2]);\r",
							"\r",
							"pm.test(\"check salary\", function () {\r",
							"pm.expect(response.salary[0]).to.eql(+req.salary);\r",
							"})\r",
							"\r",
							"pm.test(\"check salary*2\", function () {\r",
							"pm.expect(Number(response.salary[1])).to.eql(req.salary*2);\r",
							"})\r",
							"\r",
							"pm.test(\"check salary*3\", function () {\r",
							"pm.expect(Number(response.salary[2])).to.eql(req.salary*3);\r",
							"})\r",
							"\r",
							"pm.test(\"check salary*3\", function () {\r",
							"pm.expect(Number(response.salary[2])).to.eql(req.salary*3);\r",
							"})\r",
							"\r",
							"pm.environment.set(\"name\", response.name);\r",
							"\r",
							"pm.environment.set(\"age\", response.age);\r",
							"\r",
							"pm.environment.set(\"salary\", response.salary[0]);\r",
							"\r",
							"for(let i = 0; i < response.salary.length; i++) {\r",
							"   console.log(response.salary[i]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name=Julia&age=27&salary=500",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Julia"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(response).to.have.property(\"start_qa_salary\");\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_6_months\");\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_12_months\");\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(response).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"})\r",
							"\r",
							"pm.test(\"person\", function () {\r",
							"    pm.expect(response).to.have.property(\"person\");\r",
							"})\r",
							"\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(response.start_qa_salary).to.eql(+req.salary);\r",
							"})\r",
							"\r",
							"pm.test(\"start_qa_salary_after_6_months\", function () {\r",
							"    pm.expect(response.qa_salary_after_6_months).to.eql(req.salary*2);\r",
							"})\r",
							"\r",
							"pm.test(\"start_qa_salary_after_12_months\", function () {\r",
							"    pm.expect(response.qa_salary_after_12_months).to.eql(req.salary*2.7);\r",
							"})\r",
							"\r",
							"pm.test(\"start_qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(response[\"qa_salary_after_1.5_year\"]).to.eql(req.salary*3.3);\r",
							"})\r",
							"\r",
							"pm.test(\"start_qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(response[\"qa_salary_after_3.5_years\"]).to.eql(req.salary*3.8);\r",
							"})\r",
							"\r",
							"pm.test(\"check salary\", function () {\r",
							"    pm.expect(response.person.u_name[1]).to.eql(+req.salary);\r",
							"})\r",
							"\r",
							"pm.test(\"check age\", function () {\r",
							"    pm.expect(response.person.u_age).to.eql(+req.age);\r",
							"})\r",
							"\r",
							"pm.test(\"check salary\", function () {\r",
							"    pm.expect(response.person.u_salary_5_years).to.eql(req.salary*4.2);\r",
							"})\r",
							"\r",
							"for(let i in response.person){\r",
							"    console.log(\"person.\" + i + \" = \" + response.person[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	]
}